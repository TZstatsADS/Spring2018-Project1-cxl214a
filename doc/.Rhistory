packages.used=c('tm', 'ggplot2', 'tidytext', 'magrittr', 'dplyr', 'NLP')
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library('tidytext')
library('NLP')
library("tm")
library('ggplot2')
library('magrittr')
library('dplyr')
# Improt the data of the information of the inaugurations
Info = read.csv('../data/Inauglist.csv')
names(Info)[names(Info)=='Ã¯..President']='President'
Info$Fulltext = rep(NaN, nrow(Info))
# This function is used to create the filename of the corresponding full text of the inaugurations.
speechname = function(x){
a = paste('inaug', x[2], '-', x[3], '.txt', sep = '')
return(a)
}
speechfile = apply(Info, MARGIN = 1, FUN = speechname)
Info$speechfile = speechfile
# Import the stopwords of English
StopWords = stopwords('en')
'%nin%' <- Negate('%in%')
# This function is used to import the full text of each row of the data of the inaugurations' information.
# Meanwhile, we split the full text into words and remove the stopwords and punctuations in the full text.
readspeech = function(x){
a = x[9]
Line = readLines(paste('..\\data\\InauguralSpeeches\\', a, sep = ''))
Line = paste(Line, collapse = ' ')
Line = tolower(Line)
Line.words = strsplit(Line, split = '(\\s|[[:punct:]])+')[[1]]  # split the words and remove the punctuations.
Line.words = unlist(Line.words)
Line.words = Line.words[Line.words %nin% StopWords]  # remove the stopwords
return(Line.words)
}
Info$Fulltext = apply(Info, MARGIN = 1, readspeech)
dowjones = read.csv('../data/Dowjones.csv', header = TRUE)
df = merge(Info, dowjones, by.x = c('President', 'Term'), by.y = c('President', 'Term'))
# define a function to compute the scores of sentiments.
sentiments_score = function(x){
score_df = data.frame(x)
colnames(score_df) = 'word'
afinn = score_df %>%
inner_join(get_sentiments("afinn")) %>%
summarise(sentiment = sum(score))
score = as.numeric(afinn[1,1])
return(score)
}
score = lapply(df$Fulltext, sentiments_score)
df$sentiments_score = unlist(score)
reg1 = lm(df[-(which(df$rate==max(df$rate))), ]$rate~df[-(which(df$rate==max(df$rate))), ]$sentiments_score)
ggplot(df)+
geom_point(mapping = aes(x = sentiments_score, y = rate, color = Party))+
geom_abline(intercept = 1.06595901, slope = -0.01277268)+
annotate('text', x = 59+17, y = 40.18083, label = 'outlier')+
xlab('Sentiment Score')+
ylab('Dow Jones Average Change')+
ggtitle('Relation between sendiments and the Dow Jones Average')
df$average_score = df$sentiments_score/df$Words
df.new = df[-(which(df$rate==max(df$rate))), ]
reg2 = lm(df.new$rate~df.new$average_score)
ggplot(df)+
geom_point(mapping = aes(x = average_score, y = rate, color = Party))+
geom_abline(intercept = 2.135107, slope = -42.250857)+
annotate('text', x = 0.037, y = 40.18083, label = 'outlier')+
xlab('Average Sentiment Score')+
ylab('Dow Jones Average Change')+
ggtitle('Relation between sendiments and the Dow Jones Average')
ggplot(df)+
geom_point(mapping = aes(x = average_score, y = rate, color = Party))+
geom_abline(intercept = 2.135107, slope = -42.250857)+
annotate('text', x = 0.037, y = 40.18083, label = 'outlier')+
xlab('Average Sentiment Score')+
ylab('Dow Jones Average Change')+
ggtitle('Relation between sendiments and the Dow Jones Average')
ggplot(df)+
geom_point(mapping = aes(x = sentiments_score, y = rate, color = Party))+
geom_abline(intercept = 1.06595901, slope = -0.01277268)+
annotate('text', x = 59+17, y = 40.18083, label = 'outlier')+
xlab('Sentiment Score')+
ylab('Dow Jones Average Change')+
ggtitle('Relation between sendiments and the Dow Jones Average')
df$average_score = df$sentiments_score/df$Words
df.new = df[-(which(df$rate==max(df$rate))), ]
reg2 = lm(df.new$rate~df.new$average_score)
ggplot(df)+
geom_point(mapping = aes(x = average_score, y = rate, color = Party))+
geom_abline(intercept = 2.135107, slope = -42.250857)+
annotate('text', x = 0.037, y = 40.18083, label = 'outlier')+
xlab('Average Sentiment Score')+
ylab('Dow Jones Average Change')+
ggtitle('Relation between sendiments and the Dow Jones Average')
